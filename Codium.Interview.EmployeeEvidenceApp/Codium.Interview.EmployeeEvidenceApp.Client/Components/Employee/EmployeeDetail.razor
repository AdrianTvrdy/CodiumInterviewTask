@using Codium.Interview.EmployeeEvidenceApp.Client.Services
@using Codium.Interview.EmployeeEvidenceApp.Shared.Models.DTOs
@using Codium.Interview.EmployeeEvidenceApp.Shared.Models.Entities
@inject IPositionService positionService
@inject IEmployeeService employeeService

<div class="modal fade show d-block" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @if (Employee != null)
            {

                <div class="modal-header">
                    <h5 class="modal-title">Employee Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnClose">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Name: @Employee.Name</p>
                    <p>Surname: @Employee.Surname</p>
                    <p>Birth Date: @Employee.BirthDate.ToString("yyyy/MM/dd")</p>
                    <p>Position: @Position.PositionName</p>
                    <p>IP Address: @Employee.IPaddress</p>
                    <p>IP Country Code: @Employee.IPCountryCode</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="OnClose">Close</button>
                </div>

            }
            else
            {

                <div class="modal-header">
                    <p><em>Loading...</em></p>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnClose">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

            }

        </div>
    </div>
</div>

@code {
    public EmployeeDTO Employee { get; set; }
    public PositionDTO Position { get; set; }

    [Parameter] public int? EmployeeID { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        Employee = await employeeService.GetEmployeeByIdAsync((int)EmployeeID);
        Position = await positionService.GetPositionByIdAsync(Employee.PositionID);
    }
    

}